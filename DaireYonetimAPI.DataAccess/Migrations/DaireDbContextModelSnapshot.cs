// <auto-generated />
using System;
using DaireYonetimAPI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DaireYonetimAPI.DataAccess.Migrations
{
    [DbContext(typeof(DaireDbContext))]
    partial class DaireDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DaireYönetimAPI.Entity.Bakiye", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ApartmentNo")
                        .HasColumnType("int");

                    b.Property<decimal>("BalanceDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DaireId")
                        .HasColumnType("int");

                    b.Property<decimal>("Faiz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDebt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Bakiyes");
                });

            modelBuilder.Entity("DaireYönetimAPI.Entity.Daire", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int?>("BakiyeId")
                        .HasColumnType("int");

                    b.Property<decimal>("BalanceDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentdueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("apartmentdues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apartmentemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apartmentname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("apartmentno")
                        .HasColumnType("int");

                    b.Property<string>("dateofvalidity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("payduestatus")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Daires");
                });

            modelBuilder.Entity("DaireYönetimAPI.Entity.Daire", b =>
                {
                    b.HasOne("DaireYönetimAPI.Entity.Bakiye", "Bakiye")
                        .WithOne("Daire")
                        .HasForeignKey("DaireYönetimAPI.Entity.Daire", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bakiye");
                });

            modelBuilder.Entity("DaireYönetimAPI.Entity.Bakiye", b =>
                {
                    b.Navigation("Daire");
                });
#pragma warning restore 612, 618
        }
    }
}
